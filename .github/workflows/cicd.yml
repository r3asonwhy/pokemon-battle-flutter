name: Flutter Android Deploy 

on:
  pull_request:
    branches:
      - master
      - dev

  push:
    branches:
      - master
      - dev

jobs:
  flutter-ci:
    name: Lint, Analyze & Test
    runs-on: ubuntu-latest

    steps:
      - name: üß± Checkout code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          # Use a more stable or a generic version/channel if possible, or keep as is.
          flutter-version: '3.35.5'
          channel: 'stable'

      - name: üì¶ Install dependencies
        run: flutter pub get

      - name: üîç Analyze
        run: flutter analyze

      - name: üßπ Format check
        # Added --line-length 80 as a common best practice, adjust if needed.
        run: dart format --output=none --set-exit-if-changed . --line-length 80

      - name: üß™ Run tests
        run: flutter test --no-pub

  ---
  deploy-web:
    name: Deploy to Firebase Hosting
    needs: flutter-ci
    runs-on: ubuntu-latest
    if: github.event_name == 'push' # Only run on push events (not PRs)

    steps:
      - name: üß± Checkout code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'
          channel: 'stable'

      - name: üß∞ Build Flutter Web
        run: flutter build web --release

      - name: üî• Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: ${{ github.ref_name == 'master' && 'live' || 'dev' }}
          projectId: ${{ github.ref_name == 'master' && 'pokemon-app-temp' }}
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks

  ---
  deploy-app:
    name: Deploy to Firebase App Distribution (Android)
    needs: flutter-ci
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: üß± Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Good practice for git history required by versioning step

      - name: ‚öôÔ∏è Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'
          channel: 'stable'

      - name: üì¶ Install dependencies
        run: flutter pub get

      - name: üî¢ Calculate Build Number and Version Name
        id: versioning
        run: |
          # Get the current version from pubspec.yaml (e.g., 1.0.0+1)
          CURRENT_VERSION=$(grep 'version:' pubspec.yaml | head -1 | awk '{print $2}')
          
          # Use the number of commits on the current branch as the build number
          BUILD_NUMBER=$(git rev-list --count ${{ github.sha }})
          
          # Extract the version name (e.g., 1.0.0)
          VERSION_NAME=$(echo $CURRENT_VERSION | awk -F '+' '{print $1}')
          
          # The new full version will be VERSION_NAME+BUILD_NUMBER
          NEW_FULL_VERSION="${VERSION_NAME}+${BUILD_NUMBER}"

          # Set the new full version as an output for later use
          echo "NEW_FULL_VERSION=${NEW_FULL_VERSION}" >> $GITHUB_OUTPUT
          echo "RELEASE_NOTES=Commit: ${{ github.sha }} | Branch: ${{ github.ref_name }} | Version: ${NEW_FULL_VERSION}" >> $GITHUB_OUTPUT
          
          echo "Calculated new version: ${NEW_FULL_VERSION}"

      - name: ‚úçÔ∏è Update pubspec.yaml with New Version
        run: |
          sed -i "s/^version: .*/version: ${{ steps.versioning.outputs.NEW_FULL_VERSION }}/" pubspec.yaml
          cat pubspec.yaml

      - name: üèóÔ∏è Build Android APK
        run: |
          flutter build apk --release \
            --build-name=${{ steps.versioning.outputs.NEW_FULL_VERSION }} \
            --build-number=${{ steps.versioning.outputs.NEW_FULL_VERSION | cut -d '+' -f 2 }}

      - name: üî• Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ github.ref_name == 'master' && secrets.FIREBASE_ANDROID_APP_ID_PROD || secrets.FIREBASE_ANDROID_APP_ID_DEV }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: ${{ steps.versioning.outputs.RELEASE_NOTES }}